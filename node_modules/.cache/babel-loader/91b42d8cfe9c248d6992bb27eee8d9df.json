{"ast":null,"code":"var _jsxFileName = \"/Users/beaolivei/Desktop/projetos/itunes-browser/src/compositions/top-songs/TopSongs.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport { Item } from '../../components/list-item/ListItem';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport { GroupedSearchInput } from '../../components/grouped-search/GroupedSearchInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TopSongs() {\n  _s();\n\n  const [searchItem, setSearchItem] = useState('');\n  const [mySongs, setMySongs] = useState([]);\n  useEffect(() => {\n    fetch('https://itunes.apple.com/us/rss/topsongs/limit=100/json').then(results => results.json()).then(data => {\n      const {\n        entry\n      } = data.feed;\n      setMySongs(entry);\n    });\n  }, []);\n\n  const onChange = (event, value) => {\n    setSearchItem(value);\n  };\n\n  const onClearSearch = () => {\n    setSearchItem('');\n  };\n\n  console.log({\n    mySongs\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    minHeight: \"500px\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(GroupedSearchInput, {\n          inputLabel: \"Search on Song List\",\n          data: mySongs,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), searchItem !== \"\" && /*#__PURE__*/_jsxDEV(Box, {\n          marginLeft: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onClearSearch,\n            variant: \"contained\",\n            children: \" Clear Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }, this), searchItem === '' ? /*#__PURE__*/_jsxDEV(List, {\n        children: !mySongs ? 'Loading...' : mySongs.map((i, index) => {\n          const artist = i[\"im:artist\"].label;\n          const song = i[\"im:name\"].label;\n          const src = i[\"im:image\"][2].label;\n          const price = i[\"im:price\"].label;\n          const href = i[\"link\"][0].attributes.href;\n          return /*#__PURE__*/_jsxDEV(Item, {\n            name: i.title.label,\n            song: song,\n            artist: artist,\n            src: src,\n            price: price,\n            href: href\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        children: /*#__PURE__*/_jsxDEV(Item, {\n          name: searchItem.title.label,\n          artist: searchItem[\"im:artist\"].label,\n          song: searchItem[\"im:name\"].label,\n          src: searchItem[\"im:image\"][2].label,\n          price: searchItem[\"im:price\"].label,\n          href: searchItem[\"link\"][0].attributes.href\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopSongs, \"N5SDGZrOIpdY+BIYLfJW9ah1BOI=\");\n\n_c = TopSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopSongs\");","map":{"version":3,"sources":["/Users/beaolivei/Desktop/projetos/itunes-browser/src/compositions/top-songs/TopSongs.jsx"],"names":["React","useState","useEffect","Box","List","Item","Container","Button","GroupedSearchInput","TopSongs","searchItem","setSearchItem","mySongs","setMySongs","fetch","then","results","json","data","entry","feed","onChange","event","value","onClearSearch","console","log","map","i","index","artist","label","song","src","price","href","attributes","title"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport {Item} from '../../components/list-item/ListItem'\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport {GroupedSearchInput} from '../../components/grouped-search/GroupedSearchInput'\n\nexport function TopSongs(){\n    const [searchItem, setSearchItem] = useState('')\n    const[mySongs, setMySongs]= useState([])\n\n    useEffect(() => {\n        fetch('https://itunes.apple.com/us/rss/topsongs/limit=100/json')\n      .then(results => results.json())\n      .then(data => {\n        const {entry} = data.feed;\n        setMySongs(entry)\n      });\n  }, []);\n\n    const onChange = (event, value) => {\n        setSearchItem(value)\n    }\n    const onClearSearch = () => {\n        setSearchItem('')\n    }\n    console.log({mySongs})\n    return(\n        <Box minHeight=\"500px\">\n          <Container>\n              <Box display=\"flex\" justifyContent=\"left\">\n              <GroupedSearchInput inputLabel=\"Search on Song List\" data={mySongs} onChange={onChange} />\n              {searchItem !== \"\" && \n              <Box marginLeft={2}>\n               <Button onClick={onClearSearch} variant=\"contained\"> Clear Search</Button>\n              </Box>\n              }\n              </Box>\n            {searchItem === '' ?\n                <List>\n                    {!mySongs ? 'Loading...' : mySongs.map((i, index)=> {\n                    const artist = i[\"im:artist\"].label;\n                    const song = i[\"im:name\"].label;\n                    const src = i[\"im:image\"][2].label;\n                    const price = i[\"im:price\"].label;\n                    const href = i[\"link\"][0].attributes.href;\n                    return(\n                        <Item \n                        name={i.title.label} \n                        song={song} \n                        artist={artist} \n                        key={index} \n                        src={src} \n                        price={price}\n                        href={href}\n                        />\n                        )\n                        })}\n                </List> : \n                <List>\n                <Item \n                name={searchItem.title.label} \n                artist={searchItem[\"im:artist\"].label} \n                song={searchItem[\"im:name\"].label}\n                src={searchItem[\"im:image\"][2].label} \n                price={searchItem[\"im:price\"].label}\n                href={searchItem[\"link\"][0].attributes.href}\n                />\n                </List>}\n\n        </Container>\n        </Box>\n    )\n}"]},"metadata":{},"sourceType":"module"}